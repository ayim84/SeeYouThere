{"version":3,"sources":["utils/API.js","components/Nav/Nav.js","components/MapContainer.js","components/List/List.js","components/List/ListItem.js","components/List/ListHeader.js","App.js","serviceWorker.js","index.js"],"names":["API","googleLocation","location","axios","get","yelp","lat","long","category","yelpURL","headers","Authorization","Nav","react_default","a","createElement","lib","className","header","right","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onMapClicked","inherits","createClass","key","value","nextProps","nextState","placesArray","_this2","bounds","google","maps","LatLngBounds","i","locationsObjArray","extend","react","dist","zoom","style","width","height","initialCenter","lng","center","centerLat","centerLong","onClick","locationsArray","name","position","map","icon","url","place","coordinates","latitude","longitude","alias","visible","Component","GoogleApiWrapper","apiKey","List","_ref","children","ListItem","ListHeader","App","location1","location2","location3","location4","handleInputChange","event","_event$target","target","defineProperty","handleFormSubmit","preventDefault","locations","push","getLatLong","completeLocations","Promise","all","resolve","reject","then","res","catch","err","console","log","_loop","googleMapsResults","data","results","geometry","coords","prevState","toConsumableArray","coordsObj","getCenter","loadPlaces","cat","businesses","num_coords","X","Y","Z","Math","PI","lon","cos","sin","atan2","hyp","sqrt","newX","newY","components_Nav_Nav","s","label","onChange","type","waves","components_MapContainer","offset","List_List","ListHeader_ListHeader","ListItem_ListItem","id","href","rel","display_phone","categories","title","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0d0dd53.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst googleURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\nconst googleAPIKEY = \"&key=AIzaSyCZHm522MDtZTsy5gXFX2ni9rsUYdKXCh4\"; \n\nconst yelpURL = \"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?\";\n\nexport default {\n    googleLocation: location => axios.get(googleURL + location + googleAPIKEY),\n    yelp: (lat, long, category) => axios.get(yelpURL + \"latitude=\" + lat + \"&longitude=\" + long + \"&categories=\" + category, {headers: {Authorization: \"Bearer xPu4PdApD7iZEGV1WZoFEnQ19m1bNtl9UO6chw0e8jkzMb4nnqrS-W3Dsoq6DrnCUhk6acWx-cfV-ZkJmhQ6C02O-7a8PcPL5hHgKP2rG-yshyFN_bNVD-VEyInSW3Yx\"}})\n};","import './Nav.css';\nimport React from \"react\";\nimport { Card, Navbar } from 'react-materialize';\n\n\nconst Nav = () => (\n    <Card className=\"small\"\n\n        header={<Navbar className=\"navBar\" right></Navbar>}>\n    <div className=\"text\">See You There\n        </div>\n    </Card>\n\n);\n\nexport default Nav;\n","import React, { Fragment, Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\n\nexport class MapContainer extends Component {\n    state =\n        {\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onMapClicked = (props) => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.placesArray === nextProps.placesArray && this.state.showingInfoWindow === nextState.showingInfoWindow && this.state.selectedPlace === nextState.selectedPlace) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    render() {\n        const style =\n        {\n            width: '40%',\n            height: '70%'\n        }\n\n        let bounds = new this.props.google.maps.LatLngBounds();\n\n        for (let i = 0; i < this.props.locationsObjArray.length; i++) {\n            bounds.extend(this.props.locationsObjArray[i]);\n        }\n\n        return (\n            <Fragment>\n                <Map\n                    google={this.props.google}\n                    zoom={4}\n                    style={style}\n                    initialCenter=\n                    {\n                        {\n                            lat: 37.09024,\n                            lng: -95.712891\n                        }\n                    }\n                    center=\n                    {\n                        {\n                            lat: this.props.centerLat,\n                            lng: this.props.centerLong\n                        }\n                    }\n                    bounds={bounds}\n                    onClick={this.onMapClicked}\n                >\n                    {this.props.locationsArray.length > 0 ?\n                        (\n                            <Marker\n                                name={'Center Point'}\n                                position={{ lat: this.props.centerLat, lng: this.props.centerLong }}\n                                onClick={this.onMarkerClick}\n                            />\n                        ) :\n                        (\n                            <Fragment></Fragment>\n                        )\n                    }\n                    {this.props.locationsArray.map(location =>\n                        (\n                            <Marker\n                                position={{ lat: location[0], lng: location[1] }}\n                                key={location}\n                                icon=\n                                {\n                                    {\n                                        url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n                                    }\n                                }\n                            >\n                            </Marker>\n                        ))}\n                    {this.props.placesArray.map(place =>\n                        (\n                            <Marker\n                                name={place.name}\n                                position={{ lat: place.coordinates.latitude, lng: place.coordinates.longitude }}\n                                key={place.alias}\n                                onClick={this.onMarkerClick}\n                                icon=\n                                {\n                                    {\n                                        url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n                                    }\n                                }\n                            />\n                        ))}\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                    >\n                        <div>\n                            <p>{this.state.selectedPlace.name}</p>\n                        </div>\n                    </InfoWindow>\n                </Map>\n            </Fragment>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyCZHm522MDtZTsy5gXFX2ni9rsUYdKXCh4\"\n})(MapContainer)","import React from \"react\";\n\nexport const List = ({ children }) => {\n  return (\n    <div> \n      <ul>\n        {children}\n      </ul>\n    </div>\n  );\n};","import React from \"react\";\n\nexport const ListItem = props => (\n  <li>\n    {props.children}\n  </li>\n);","import React from \"react\";\n\nexport const ListHeader = props => (\n  <h4>{props.children}</h4>\n);","import React, { Fragment, Component } from 'react';\nimport './App.css';\nimport {Row, Col, Input, Button, Icon, Container, Collapsible, CollapsibleItem, M, options} from 'react-materialize';\nimport API from \"./utils/API\";\nimport Nav from \"./components/Nav/Nav.js\";\nimport MapContainer from \"./components/MapContainer.js\";\nimport {List, ListItem, ListHeader} from \"./components/List\";\n\nclass App extends Component {\n  state =\n  {\n    location1: \"\",\n    location2: \"\",\n    location3: \"\",\n    location4: \"\",\n    locationsArray: [],\n    locationsObjArray: [],\n    centerLat: 37.09024,\n    centerLong: -95.712891,\n    category: \"restaurants\",\n    placesArray: [],\n    showingInfoWindow: true,\n  };\n\n  handleInputChange = event =>\n  {\n    const {name, value} = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event =>\n  {\n    event.preventDefault();\n\n    let locations = [];\n\n    this.setState({locationsArray: []});\n    this.setState({locationsObjArray: []});\n\n    locations.push(this.state.location1, this.state.location2, this.state.location3, this.state.location4);\n    \n    this.getLatLong(locations);\n    this.setState({showingInfoWindow: false})\n  };\n\n\n getLatLong = locations =>\n  {\n    const completeLocations = [];\n\n    for(let i = 0; i < locations.length; i++)\n    {\n      if(locations[i] !== \"\")\n      {\n        completeLocations.push(locations[i]);\n      }\n    }\n\n    Promise.all(completeLocations.map((location) =>\n    {\n      return new Promise((resolve, reject) =>\n      {\n        if(location !== \"\")\n        {\n          API.googleLocation(location)\n          .then(res =>\n            {\n              resolve(res);\n            })\n          .catch(err => console.log(err));\n        }\n      });\n    }))\n    .then(res =>\n      {\n        for(let i = 0; i < res.length; i++)\n        {\n          const googleMapsResults = res[i].data.results[0];\n          const lat = googleMapsResults.geometry.location.lat;\n          const long = googleMapsResults.geometry.location.lng;\n\n          let coords = [lat, long];\n          this.setState(prevState => ({locationsArray: [...prevState.locationsArray, coords]}));\n\n          let coordsObj = {lat: lat, lng: long};\n          this.setState(prevState => ({locationsObjArray: [...prevState.locationsObjArray, coordsObj]}));\n        }\n\n        this.getCenter(this.state.locationsArray);\n\n        this.loadPlaces(this.state.centerLat, this.state.centerLong, this.state.category);\n      });\n  }\n\n  loadPlaces = (lat, long, cat) =>\n  {\n    API.yelp(lat, long, cat)\n    .then(res => {\n      this.setState({placesArray: res.data.businesses});\n      console.log(\"Places: \", this.state.placesArray);\n    });\n  }\n\n  getCenter = coordinates =>\n  {\n    if (!(coordinates.length > 0))\n    {\n      return false;\n    } \n\n    var num_coords = coordinates.length;\n\n    let X = 0.0;\n    let Y = 0.0;\n    let Z = 0.0;\n\n    for(let i = 0; i < coordinates.length; i++)\n    {\n      let lat = coordinates[i][0] * Math.PI / 180;\n      let lon = coordinates[i][1] * Math.PI / 180;\n\n      let a = Math.cos(lat) * Math.cos(lon);\n      let b = Math.cos(lat) * Math.sin(lon);\n      let c = Math.sin(lat);\n\n      X += a;\n      Y += b;\n      Z += c;\n    }\n\n    X /= num_coords;\n    Y /= num_coords;\n    Z /= num_coords;\n\n    let lon = Math.atan2(Y, X);\n    let hyp = Math.sqrt(X * X + Y * Y);\n    let lat = Math.atan2(Z, hyp);\n\n    let newX = (lat * 180 / Math.PI);\n    let newY = (lon * 180 / Math.PI);\n\n    this.setState({centerLat: newX, centerLong: newY});\n\n    // console.log(\"Center Point: \" + this.state.centerLat + \", \" + this.state.centerLong);\n\n    // return new Array(newX, newY);\n  }\n\n\n\n  \n  render() {\n    return (\n      <Fragment>\n        <Nav />\n        <Container>\n        <Row>\n          <Input \n            s={3} \n            label=\"Location 1\"\n            name=\"location1\"\n            value={this.state.location1}\n            onChange={this.handleInputChange}\n          />\n          <Input\n            s={3}\n            label=\"Location 2\"\n            name=\"location2\"\n            value={this.state.location2}\n            onChange={this.handleInputChange}\n          />\n          <Input\n            s={3}\n            label=\"Location 3\"\n            name=\"location3\"\n            value={this.state.location3}\n            onChange={this.handleInputChange}\n          />\n          <Input\n            s={3}\n            label=\"Location 4\"\n            name=\"location4\"\n            value={this.state.location4}\n            onChange={this.handleInputChange}\n          />\n        </Row>\n        <Row>\n          <Col>\n            <Input \n              type='select' \n              label=\"Category\"\n              name=\"category\"\n              value={this.state.category}\n              onChange={this.handleInputChange}\n            >\n              <option value='restaurants'>Restaurants</option>\n              <option value='bars'>Bars</option>\n            </Input>\n          </Col>\n          <Col>\n            <Button\n              waves=\"light\"\n              type=\"submit\"\n              onClick={this.handleFormSubmit}\n            >\n              Submit\n              {/* <Icon right>\n                send\n              </Icon> */}\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <MapContainer\n              locationsArray={this.state.locationsArray}\n              locationsObjArray={this.state.locationsObjArray}\n              placesArray={this.state.placesArray}\n              centerLat={this.state.centerLat}\n              centerLong={this.state.centerLong}\n              showingInfoWindow={this.state.showingInfoWindow}\n            />\n          </Col>\n        <Col s={4} offset=\"s8\">\n            {this.state.placesArray.length ?\n            (\n              <List>\n                <ListHeader>Places</ListHeader>\n                {this.state.placesArray.map(place =>\n                  (\n                    <ListItem header={place.name} key={place.id}>\n                      <h5><a href={place.url} target=\"_blank\" rel=\"noopener noreferrer\">{place.name}</a></h5>\n                      <p>{place.display_phone}</p>\n                      {place.categories.map(categories =>\n                      (\n                        <i>{categories.title} </i>\n                      ))}\n                    </ListItem>\n                  ))}\n              </List>\n            ) :\n            (\n              <h3>No Results</h3>\n            )}\n          </Col>\n        </Row>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}